import React from 'react';
import type { ItineraryResponse } from '../services/api';
import { ItineraryDisplay } from './ItineraryDisplay';

interface ItineraryModalProps {
  isOpen: boolean;
  onClose: () => void;
  itinerary: ItineraryResponse | null;
}

export const ItineraryModal: React.FC<ItineraryModalProps> = ({ 
  isOpen, 
  onClose, 
  itinerary 
}) => {
  if (!isOpen || !itinerary) return null;

  const handleBackdropClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  const handleExport = () => {
    // TODO: Implement PDF export functionality
    alert('Export functionality coming soon!');
  };

  const handleShare = () => {
    // TODO: Implement sharing functionality
    if (navigator.share) {
      navigator.share({
        title: `My ${itinerary.destination} Itinerary`,
        text: `Check out my amazing ${itinerary.days.length}-day trip to ${itinerary.destination}!`,
        url: window.location.href,
      });
    } else {
      // Fallback for browsers that don't support Web Share API
      navigator.clipboard.writeText(window.location.href);
      alert('Link copied to clipboard!');
    }
  };

  return (
    <div 
      className="fixed inset-0 z-50 overflow-y-auto"
      onClick={handleBackdropClick}
    >
      {/* Backdrop */}
      <div className="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm transition-opacity"></div>
      
      {/* Modal */}
      <div className="flex min-h-full items-center justify-center p-4">
        <div className="relative w-full max-w-6xl max-h-[90vh] bg-white rounded-2xl shadow-2xl overflow-hidden">
          {/* Header */}
          <div className="sticky top-0 bg-white border-b border-gray-200 px-6 py-4 flex items-center justify-between z-10">
            <div>
              <h2 className="text-2xl font-bold text-gray-900">
                Your {itinerary.destination} Itinerary
              </h2>
              <p className="text-sm text-gray-600">
                {itinerary.days.length} days â€¢ {itinerary.travelers} travelers â€¢ {itinerary.budget} budget
              </p>
            </div>
            <div className="flex items-center space-x-3">
              <button
                onClick={handleExport}
                className="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors duration-200"
              >
                ðŸ“„ Export
              </button>
              <button
                onClick={handleShare}
                className="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200"
              >
                ðŸ“¤ Share
              </button>
              <button
                onClick={onClose}
                className="p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors duration-200"
              >
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
          </div>

          {/* Content */}
          <div className="overflow-y-auto max-h-[calc(90vh-80px)]">
            <div className="p-6">
              <ItineraryDisplay itinerary={itinerary} />
            </div>
          </div>

          {/* Footer */}
          <div className="sticky bottom-0 bg-gray-50 border-t border-gray-200 px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="text-sm text-gray-600">
                Generated by ExplorAI â€¢ {new Date().toLocaleDateString()}
              </div>
              <div className="flex space-x-3">
                <button
                  onClick={onClose}
                  className="px-6 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 rounded-lg transition-colors duration-200"
                >
                  Close
                </button>
                <button
                  onClick={handleExport}
                  className="px-6 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200"
                >
                  Save & Export
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
